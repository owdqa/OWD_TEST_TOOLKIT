#!/bin/bash
#
# A standalone executable to return a list of test cases from a Jira User Story.
#
TYPE=${1:?"Syntax: $0 <test type>"}

export RESULT_DIR=${RESULT_DIR:-"/tmp/tests/ad-hoc"}
[ ! -d "$RESULT_DIR" ] && mkdir $RESULT_DIR

export LOGFILE=${RESULT_DIR}/@Get_Jira_test_ids@Click_here_for_details
cp /dev/null $LOGFILE

for TYPE in $(echo "$@")
do
	printf "\n<u>Gathering Jira ids for user story <b>$TYPE</b> (if it exists).</u>\n\n" >> $LOGFILE
	
	case "$TYPE" in
		"CAMERA")          x="26327 26328 26342 26720 26721 26722 26724 26725 26726 26727 26728 26729
	                          26730 26731 26732 26733";;
		"VIDEO")           x="26329 26672 26673 26674 26675 26676 26677 26678 26679 26680 26681 26682
	                          26683 ";;
		"SETTINGS")        x="26484 26485 26486 26487 26488 26489 26490 26491 26492 26493 26494 26495
	                          26496 26497 26498 26499 26500 26501 26502 26503 26504 26505 26506 26507
	                          26508 26509 26510 26511 26512 26513 26514 26515 26516 26517 26518 26519
	                          26520	";;
		"WIFI")            x="26535 26536 26537 26538 26539 26540 26541 26542 26543 26544 26545 26546
		                      26547 26548 26549 26550 26551 26552 26553 26554 26555 26556 26557 26558
		                      26559 26560 26561 26562 26563 26564 ";;
		"BROWSER")         x="26332 26333 26565 26566 26567 26568 26569 26570 26571 26572 26573 26574
		                      26575 26576 26577 26578 26579 26580 26581 26582 26583 26584 26585 26586
		                      26587 26588 26589 26590 26591 26592 26593 26594 26595 26596 26597 26598
		                      26599 26600 26601 26602 26603 26604 26605 26606 26607 26608 26609 26610
		                      26611 26612 26613 26614 26615 26616 26617 26618 26619 26620 26621 26622
		                      26623 26624 26625 26626 26627 26628 26629 26630 26631 26632 26633 26634
		                      26635 26636 26637 26638 26639 26640 26641 26642 26643 26644 26645 26648
		                      26649 ";;
		"MUSIC")           x="26349 26661 26662 26663 26664 26665 26666 26667 26668 26669 26670 26671";;
		"COSTCONTROL")     x="26315 26316 26423 26424 26425 26426 26427 26428 26429 26430 26431 26432
		                      26433 26434 26435 26436 26437 26438 ";;
		"MARKETPLACE")     x="26336 26344 26351 26439 26440 26441 26442 26443 26444 26445 ";;
		"GALLERY")         x="26330 26331 26704 26705 26706 26707 26708 26709 26710 26711 26712 26713
		                      26714 26715 26716 26717 26718 26719 ";;
		"HOMESCREEN")      x="26318 26319 26337 26345 26346 26352 26751 26752 26753 26754 26755 26756
		                      26757 26758 26759 26760 26761 26762 26763 26764 26765 26766 26767 26768
		                      26769 26770 26771 26772 26773 26774 26775 26776 26777 26778 26779 26780
		                      26781 26782 26783 26784 26785 26786 ";;
		"CALENDAR")        x="26347 26684 26685 26686 26687 26688 26689 26690 26691 26692 26693 26694
		                      26695 26696 26697 26698 26699 26700 26701 26702 26703 ";;
		"CLOCK")            x="26348 26467 26468 26469 26470 26471 26472 26473 26474 26475 26476 26477
		                      26478 26479 26480 26481 26482 ";;
		"EMAIL")           x="26314 26338 26339 26340 26341 26734 26735 26736 26737 26738 26739 26740
		                      26741 26742 26743 26744 26745 26746 26747 26748 26749 26750 ";;
		"FM_RADIO")        x="26335 26650 26651 26652 26653 26654 26655 26656 26657 26658 26659 26660";;
		"BLUETOOTH")       x="26350 26521 26522 26523 26524 26525 26526 26527 26528 26529 26530 26531
		                      26532 26533 26534 26646 26647 ";;
		"FACEBOOK")        x="26353 26354 26359 26372 26373 26374 26375 26376 26377 26378 26379 26380
		                      26381 26382 26383 26384 26385 26386 26387 26388 26389 26390 26391 26392
		                      26393 26394 26395 26396 26397 26398 26399 26400 26401 26915 26916 26917
		                      26918 ";;
		"FTU")             x="26355 26356 26357 26370 26371 27070 27071 27072 27073 27074 27075 27076
		                      27077 27078 27079 27080 27081 27082 27083 27084 27085 27086 ";;
		"CONTACTS")        x="26317 26323 26324 26325 26402 26866 26867 26868 26869 26870 26871 26872
		                      26873 26874 26875 26876 26877 26878 26879 26880 26881 26882 26883 26884
		                      26885 26886 26887 26888 26889 26890 26891 26892 26893 26894 26895 26896
		                      26897 26898 26899 26900 26901 26902 26903 26904 26905 26906 26907 26908
		                      26909 26910 26911 26912 26913 26914 27034 27035 27036 27037 27038 27039
		                      27040 27041 27042 27043 27044 27045 27046 27047 27048 27049 27050 27051
		                      27052 27053 27054 27055 27056 27057 27058 27059 27060 27061 27062 27063
		                      27064 27065 27066 ";;
		"DIALER")          x="26320 26321 26322 26787 26788 26789 26790 26791 26792 26793 26794 26795
		                      26796 26797 26798 26799 26800 26801 26802 26803 26804 26805 26806 26807
		                      26808 26809 26810 26811 26812 26813 26814 26815 26816 26817 26818 26819
		                      26820 26821 26822 26823 26824 26825 26826 26827 26828 26829 26830 26831
		                      26832 26833 26834 26835 26836 26837 26838 27005 27006 27007 27009 27010
		                      27011 27012 27013 27014 27015 27016 27017 27018 27020 27021 27022 27023
		                      27024 27025 27026 27027 27028 27029 27030 ";;
		"OTA")             x="26313 26360 26361 26362 26363 26364 26365 26366 26367 26368 26369 ";;
		"SMS")             x="26326 26403 26404 26405 26406 26407 26413 26414 26415 26839 26840 26841
		                      26842 26843 26844 26845 26846 26847 26848 26849 26850 26851 26852 26853
		                      26854 26855 26856 26857 26858 26859 26860 26861 26862 26863 26864 26865
		                      27735 27736 27737 27739 27740 27741 27742 27743 27744 27745 27746 27747
		                      27748 27749 27750 27751 27752 27753 27754 27755 27756 27757 27758 27759
		                      27760 27761 27762 27763 27764 27765 26965 26966 26967 26968 26969 26970
		                      26971 26972 26973 26974 26975 26976 26977 26978 26979 26980 26981 26982
		                      26983 26984 26985 26986 26987 26988 26989 26990 26991 26992 26993 26994
		                      26995 26996 26997 26998 26999 27000 27001 27002 28100 ";;
		"OTHER_FEATURES")  x="26334 26343 26358 26408 26409 26410 26411 26412 26416 26417 26418 26419
		                      26420 26421 26422 26446 26447 26448 26449 26450 26451 26452 26453 26454
		                      26455 26456 26457 26458 26459 26460 26461 26462 26463 26464 26465 26466
		                      26483 ";;
	esac
	
	if [ ! "$x" ]
	then
		printf " <b>Failed!</b> Cannot find test cases for $TYPE!\n\n" >> $LOGFILE
	else
		echo "$x" | awk '{for (i=1;i<=NF;++i)print $i}'
		printf "\nFound <b>$(echo "$x" | wc -w)</b> IDs. \n\n" >> $LOGFILE
	fi
done
